name: 'events-notification-app'
services:
  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=mydatabase'
      - 'MONGO_INITDB_ROOT_PASSWORD=secret'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - '27017:27017'
  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'

  zookeeper:
    image: 'zookeeper:latest'
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - './volumes/kafka/data/zookeeper/data:/data'
      - './volumes/kafka/data/zookeeper/datalog:/datalog'
  kafka:
    image: 'confluentinc/cp-kafka:latest'
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT'
    volumes:
      - './volumes/kafka/data/kafka/data:/var/lib/kafka/data'
    ports:
      - '9092:9092'

  #kafka-ui:
  #  image: provectuslabs/kafka-ui:latest
  #  environment:
  #    KAFKA_CLUSTERS_0_NAME: local-cluster
  #    KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
  #  ports:
  #    - '8280:8080'
  #  depends_on:
  #    - kafka

  #jaeger:
  #  image: jaegertracing/jaeger:latest
  #  ports:
  #    - "16686:16686"
  #    - "4317:4317"
  #    - "4318:4318"
  #  environment:
  #    - LOG_LEVEL=debug

  #hotrod:
  #  image: ${REGISTRY:-}jaegertracing/example-hotrod:${HOTROD_VERSION:-latest}
  #  # To run the latest trunk build, find the tag at Docker Hub and use the line below
  #  # https://hub.docker.com/r/jaegertracing/example-hotrod-snapshot/tags
  #  #image: jaegertracing/example-hotrod-snapshot:0ab8f2fcb12ff0d10830c1ee3bb52b745522db6c
  #  ports:
  #    - "8080:8080"
  #    - "8083:8083"
  #  command: ["all"]
  #  environment:
  #    - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
  #  networks:
  #    - jaeger-example
  #  depends_on:
  #    - jaeger
